"""Initial migration

Revision ID: 9a818ccb2f0a
Revises: 
Create Date: 2020-06-01 11:30:07.366041

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from app.database.db_types.JsonCustomType import JsonCustomType

# revision identifiers, used by Alembic.
revision = '9a818ccb2f0a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(schema_name):
    globals()["upgrade_%s" % schema_name]()


def downgrade(schema_name):
    globals()["downgrade_%s" % schema_name]()

def upgrade_public():
    pass

def downgrade_public():
    pass

def upgrade_bitschema():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tasks', JsonCustomType, nullable=True),
    sa.Column('next_task_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks_list')),
    schema='public'
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('username', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('password_hash', sa.String(length=100), nullable=True),
    sa.Column('registration_date', sa.Float(), nullable=True),
    sa.Column('terms_and_conditions_checked', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('email_verification_date', sa.DateTime(), nullable=True),
    sa.Column('current_mentorship_role', sa.Integer(), nullable=True),
    sa.Column('membership_status', sa.Integer(), nullable=True),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('location', sa.String(length=80), nullable=True),
    sa.Column('occupation', sa.String(length=80), nullable=True),
    sa.Column('slack_username', sa.String(length=80), nullable=True),
    sa.Column('social_media_links', sa.String(length=500), nullable=True),
    sa.Column('skills', sa.String(length=500), nullable=True),
    sa.Column('interests', sa.String(length=200), nullable=True),
    sa.Column('resume_url', sa.String(length=200), nullable=True),
    sa.Column('photo_url', sa.String(length=200), nullable=True),
    sa.Column('need_mentoring', sa.Boolean(), nullable=True),
    sa.Column('available_to_mentor', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username')),
    schema='public'
    )
    op.create_table('mentorship_relations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mentor_id', sa.Integer(), nullable=True),
    sa.Column('mentee_id', sa.Integer(), nullable=True),
    sa.Column('action_user_id', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=False),
    sa.Column('accept_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('start_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('end_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('state', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', 'CANCELLED', 'COMPLETED', name='mentorshiprelationstate'), nullable=False),
    sa.Column('notes', sa.String(length=400), nullable=True),
    sa.Column('tasks_list_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mentee_id'], ['public.users.id'], name=op.f('fk_mentorship_relations_mentee_id_users')),
    sa.ForeignKeyConstraint(['mentor_id'], ['public.users.id'], name=op.f('fk_mentorship_relations_mentor_id_users')),
    sa.ForeignKeyConstraint(['tasks_list_id'], ['public.tasks_list.id'], name=op.f('fk_mentorship_relations_tasks_list_id_tasks_list')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mentorship_relations')),
    schema='public'
    )
    op.create_table('tasks_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('relation_id', sa.Integer(), nullable=True),
    sa.Column('creation_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=False),
    sa.Column('modification_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('comment', sa.String(length=400), nullable=False),
    sa.ForeignKeyConstraint(['relation_id'], ['public.mentorship_relations.id'], name=op.f('fk_tasks_comments_relation_id_mentorship_relations')),
    sa.ForeignKeyConstraint(['task_id'], ['public.tasks_list.id'], name=op.f('fk_tasks_comments_task_id_tasks_list')),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], name=op.f('fk_tasks_comments_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks_comments')),
    schema='public'
    )
    
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rep_id', sa.Integer(), nullable=True),
    sa.Column('rep_department', sa.String(length=150), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('about', sa.String(length=500), nullable=True),
    sa.Column('address', sa.String(length=254), nullable=True),
    sa.Column('website', sa.String(length=150), nullable=False),
    sa.Column('timezone', sa.Enum('CAPE_VERDE_TIME', 'NEWFOUNDLAND_STANDARD_TIME', 'ATLANTTIC_STANDARD_TIME', 'EASTERN_STANDARD_TIME', 'CENTRAL_STANDARD_TIME', 'MOUNTAIN_STANDARD_TIME', 'PACIFIC_STANDARD_TIME', 'ALASKA_STANDARD_TIME', 'HAWAII_ALEUTIAN_STANDARD_TIME', 'SAMOA_STANDARD_TIME', 'GREENWICH_MEAN_TIME', 'CENTRAL_EUROPEAN_TIME', 'WEST_AFRICA_TIME', 'EASTERN_EUROPEAN_TIME', 'CENTRAL_SOUTH_AFRICA_TIME', 'EAST_AFRICA_TIME', 'MOSKOW_TIME', 'CHARLIE_TIME', 'DELTA_TIME', 'INDIA_STANDARD_TIME', 'CHINA_STANDARD_TIME', 'AUSTRALIAN_WESTERN_STANDARD_TIME', 'AUSTRALIAN_CENTRAL_SOUTH_STANDARD_TIME', 'AUSTRALIAN_EASTERN_STANDARD_TIME', 'NEW_ZEALAND_STANDARD_TIME', name='timezone'), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISH', 'ARCHIVED', name='organizationstatus'), nullable=True),
    sa.Column('join_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.ForeignKeyConstraint(['rep_id'], ['public.users.id'], name=op.f('fk_organizations_rep_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_organizations')),
    sa.UniqueConstraint('email', name=op.f('uq_organizations_email')),
    sa.UniqueConstraint('name', name=op.f('uq_organizations_name')),
    sa.UniqueConstraint('rep_id', name=op.f('uq_organizations_rep_id')),
    schema='bitschema'
    )
    op.create_table('personal_backgrounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Enum('FEMALE', 'MALE', 'OTHER', 'DECLINED', 'NOT_APPLICABLE', name='gender'), nullable=True),
    sa.Column('age', sa.Enum('UNDER_18', 'AGE_18_TO_20', 'AGE_21_TO_24', 'AGE_25_TO_34', 'AGE_35_TO_44', 'AGE_45_TO_54', 'AGE_55_TO_64', 'ABOVE_65_YO', 'DECLINED', 'NOT_APPLICABLE', name='age'), nullable=True),
    sa.Column('ethnicity', sa.Enum('AFRICAN_AMERICAN', 'CAUCASIAN', 'HISPANIC', 'NATIVE_AMERICAN', 'MIDDLE_EASTERN', 'ASIAN', 'OTHER', 'DECLINED', 'NOT_APPLICABLE', name='ethnicity'), nullable=True),
    sa.Column('sexual_orientation', sa.Enum('HETEROSEXUAL', 'LGBTIA', 'OTHER', 'DECLINED', 'NOT_APPLICABLE', name='sexualorientation'), nullable=True),
    sa.Column('religion', sa.Enum('CHRISTIANITY', 'JUDAISM', 'ISLAM', 'HINDUISM', 'BUDDHISM', 'OTHER', 'DECLINED', 'NOT_APPLICABLE', name='religion'), nullable=True),
    sa.Column('physical_ability', sa.Enum('WITH_DISABILITY', 'WITHOUT_DISABILITY', 'DECLINED', 'NOT_APPLICABLE', name='physicalability'), nullable=True),
    sa.Column('mental_ability', sa.Enum('WITH_DISORDER', 'WITHOUT_DISORDER', 'DECLINED', 'NOT_APPLICABLE', name='mentalability'), nullable=True),
    sa.Column('socio_economic', sa.Enum('UPPER', 'UPPER_MIDDLE', 'LOWER_MIDDLE', 'WORKING', 'BELOW_POVERTY', 'DECLINED', 'NOT_APPLICABLE', name='socioeconomic'), nullable=True),
    sa.Column('highest_education', sa.Enum('BELOW_HIGH_SCHOOL', 'HIGH_SCHOOL', 'ASSOCIATE', 'BACHELOR', 'MASTER', 'PHD', 'OTHER', 'DECLINED', 'NOT_APPLICABLE', name='highesteducation'), nullable=True),
    sa.Column('years_of_experience', sa.Enum('UNDER_ONE', 'UP_TO_3', 'UP_TO_5', 'UP_TO_10', 'OVER_10', 'DECLINED', 'NOT_APPLICABLE', name='yearsofexperience'), nullable=True),
    sa.Column('others', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], name=op.f('fk_personal_backgrounds_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_personal_backgrounds')),
    sa.UniqueConstraint('user_id', name=op.f('uq_personal_backgrounds_user_id')),
    schema='bitschema'
    )
    op.create_table('users_extension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_organization_rep', sa.Boolean(), nullable=True),
    sa.Column('additional_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timezone', sa.Enum('CAPE_VERDE_TIME', 'NEWFOUNDLAND_STANDARD_TIME', 'ATLANTTIC_STANDARD_TIME', 'EASTERN_STANDARD_TIME', 'CENTRAL_STANDARD_TIME', 'MOUNTAIN_STANDARD_TIME', 'PACIFIC_STANDARD_TIME', 'ALASKA_STANDARD_TIME', 'HAWAII_ALEUTIAN_STANDARD_TIME', 'SAMOA_STANDARD_TIME', 'GREENWICH_MEAN_TIME', 'CENTRAL_EUROPEAN_TIME', 'WEST_AFRICA_TIME', 'EASTERN_EUROPEAN_TIME', 'CENTRAL_SOUTH_AFRICA_TIME', 'EAST_AFRICA_TIME', 'MOSKOW_TIME', 'CHARLIE_TIME', 'DELTA_TIME', 'INDIA_STANDARD_TIME', 'CHINA_STANDARD_TIME', 'AUSTRALIAN_WESTERN_STANDARD_TIME', 'AUSTRALIAN_CENTRAL_SOUTH_STANDARD_TIME', 'AUSTRALIAN_EASTERN_STANDARD_TIME', 'NEW_ZEALAND_STANDARD_TIME', name='timezone'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], name=op.f('fk_users_extension_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users_extension')),
    sa.UniqueConstraint('user_id', name=op.f('uq_users_extension_user_id')),
    schema='bitschema'
    )
    op.create_table('programs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('program_name', sa.String(length=100), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('end_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('target_skills', sa.ARRAY(sa.String(length=150)), nullable=True),
    sa.Column('target_candidate', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('payment_currency', sa.String(length=3), nullable=True),
    sa.Column('payment_amount', sa.BigInteger(), nullable=True),
    sa.Column('contact_type', sa.Enum('FACE_TO_FACE', 'REMOTE', 'BOTH', name='contacttype'), nullable=True),
    sa.Column('zone', sa.Enum('LOCAL', 'NATIONAL', 'GLOBAL', name='zone'), nullable=True),
    sa.Column('student_responsibility', sa.ARRAY(sa.String(length=250)), nullable=True),
    sa.Column('mentor_responsibility', sa.ARRAY(sa.String(length=250)), nullable=True),
    sa.Column('organization_responsibility', sa.ARRAY(sa.String(length=250)), nullable=True),
    sa.Column('student_requirements', sa.ARRAY(sa.String(length=250)), nullable=True),
    sa.Column('mentor_requirements', sa.ARRAY(sa.String(length=250)), nullable=True),
    sa.Column('resources_provided', sa.ARRAY(sa.String(length=250)), nullable=True),
    sa.Column('contact_name', sa.String(length=50), nullable=True),
    sa.Column('contact_department', sa.String(length=150), nullable=True),
    sa.Column('program_address', sa.String(length=250), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('contact_mobile', sa.String(length=20), nullable=True),
    sa.Column('contact_email', sa.String(length=254), nullable=True),
    sa.Column('program_website', sa.String(length=254), nullable=True),
    sa.Column('irc_channel', sa.String(length=254), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String(length=150)), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'OPEN', 'IN_PROGRESS', 'COMPLETED', 'CLOSED', name='programstatus'), nullable=True),
    sa.Column('creation_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['bitschema.organizations.id'], name=op.f('fk_programs_organization_id_organizations'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_programs')),
    sa.UniqueConstraint('program_name', name=op.f('uq_programs_program_name')),
    schema='bitschema'
    )
    op.create_table('mentorship_relations_extension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('mentorship_relation_id', sa.Integer(), nullable=False),
    sa.Column('mentor_request_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('mentor_agreed_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('mentee_request_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.Column('mentee_agreed_date', sa.Numeric(precision='16,6', asdecimal=False), nullable=True),
    sa.ForeignKeyConstraint(['mentorship_relation_id'], ['public.mentorship_relations.id'], name=op.f('fk_mentorship_relations_extension_mentorship_relation_id_mentorship_relations'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['program_id'], ['bitschema.programs.id'], name=op.f('fk_mentorship_relations_extension_program_id_programs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_mentorship_relations_extension')),
    sa.UniqueConstraint('mentorship_relation_id', name=op.f('uq_mentorship_relations_extension_mentorship_relation_id')),
    sa.UniqueConstraint('program_id', name=op.f('uq_mentorship_relations_extension_program_id')),
    schema='bitschema'
    )
    # ### end Alembic commands ###


def downgrade_bitschema():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks_comments', schema='public')
    op.drop_table('mentorship_relations', schema='public')
    op.drop_table('users', schema='public')
    op.drop_table('tasks_list', schema='public')
    op.drop_table('mentorship_relations_extension', schema='bitschema')
    op.drop_table('programs', schema='bitschema')
    op.drop_table('users_extension', schema='bitschema')
    op.drop_table('personal_backgrounds', schema='bitschema')
    op.drop_table('organizations', schema='bitschema')
    # ### end Alembic commands ###

